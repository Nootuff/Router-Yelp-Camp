<% layout("/boilerplate") %>
  <main>
    <section>
      <h1>Welcome to <%= campground.title%>!</h1>
      <h3>
        <%= campground.location%>
      </h3>
      <br>
      <% for(let img of campground.images){%>
        <img src="<%= img.url%>" alt="Camp image" width="500" height="auto">
        <%}%>
        <p>Turn the code for this into a for loop you understand once course is done. You could probably build some kind of slideshow/ carousel to show these off one by one if there are multiple images.</p>
      <br>
      <p>
        <%= campground.description%>
      </p>
      <p>Cost per night: Â£<%= campground.price%>
      </p>
      <p>Submitted By: <%= campground.author.username%>
      </p>

      <br>

    </section>
    <% if (currentUser && campground.author.equals(currentUser._id)){%>
      <!-- This checks to see if the currentUser exists (if(currentUser) && their ._id is the same as campground authors ._id making them the same user. currentUser Seems to be coming from the flash section in app.js somehow, unsure if it is a placeholder for a value. That code gets run on every route so we can access currentUser in any ejs file. The .equals() method allows us to  actually compare id values. == and === apparently wouldn't work because both of these values are objects and this for some reason wouldn't work. -->
      <a href="/campgrounds/<%= campground._id%>/edit"> Edit this campground</a>
      <form action="/campgrounds/<%=campground._id%>?_method=DELETE" method="POST">
        <!--this is using the stuff from methodOverride, note the question mark. This all links to the delete route in app.js -->
        <button>Delete</button>
      </form>
      <% } %>
        <a href="/campgrounds"> Back to campgrounds</a>
        <% if(currentUser){%>
          <!--If the currentUser variable exists, eg. if someone, anyone is logged in. Render this h2 and form-->
          <h2>Leave a review</h2>
          <form action="/campgrounds/<%=campground._id%>/reviews" method="POST" class="validated-form" novalidate>
            <!--novalidate tells the form not to use standard html validation as we have our own custom validation script in the boilerplate. The validated-form class allows the function in the script tag in the boilerplate to review this form, and not allow a submission if the textbox ix empty. -->
            <div>
              <label for="rating">Rating</label>
              <br>
              <input type="range" min="1" max="5" name="review[rating]" id="rating" required></input>
              <!--[rating] is one of the objects from review.js just like [body] below, the slider sets the number that is passed when the review is created?-->
            </div>
            <div>
              <label for="body">
                Review
              </label>
              <br>
              <textarea name="review[body]" id="body" rows="5" , cols="20" required></textarea>
            </div>
            <button>Submit</button>
          </form>
          <% } %>
            <br>
            <% for(var i=0; i < campground.reviews.length; i++) {%>
              <div>
                <h3>Review</h3>
                <p>
                  <%=campground.reviews[i].body %>
                </p>
                <h3>Rating</h3>
                <p>
                  <%= campground.reviews[i].rating %>
                </p>
                <!--Maybe using a ternary operator you could design a system to show the number of stars out of 5 or just a long, ugly if statment system. Maybe use fontAwesome for the stars.  -->
                <% if(campground.reviews[i].rating==5){ %>
                  &#9733; &#9733; &#9733; &#9733; &#9733;
                  <% } else if(campground.reviews[i].rating==4){%>
                    &#9733; &#9733; &#9733; &#9733; &#9734;
                    <% } else if(campground.reviews[i].rating==3){%>
                      &#9733; &#9733; &#9733; &#9734; &#9734;
                      <% } else if(campground.reviews[i].rating==2){%>
                        &#9733; &#9733; &#9734; &#9734; &#9734;
                        <% } else if(campground.reviews[i].rating==1){%>
                          &#9733; &#9734; &#9734; &#9734; &#9734;
                          <% } %>

                            <p>by: <%=campground.reviews[i].author.username%>
                            </p>
                            <% if (currentUser && campground.reviews[i].author.equals(currentUser._id)){%>
                              <!--If there is a currentUser (if you are logged in) & this review's author is the same as your _id the delete button will render. -->
                              <form
                                action="/campgrounds/<%=campground._id%>/reviews/<%=campground.reviews[i]._id%>?_method=DELETE"
                                method="POST">
                                <button>Delete</button>
                              </form>
                              <% } %>
              </div>
              <% } %>
  </main>